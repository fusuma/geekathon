AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SmartLabel AI Backend API

Globals:
  Function:
    Timeout: 30
    Runtime: nodejs18.x
    Environment:
      Variables:
        NODE_ENV: production
        BEDROCK_REGION: us-east-1
        BEDROCK_MODEL_ID: anthropic.claude-3-sonnet-20240229-v1:0

Parameters:
  BedrockRegion:
    Type: String
    Default: us-east-1
    Description: AWS Bedrock region
  BedrockModelId:
    Type: String
    Default: anthropic.claude-3-sonnet-20240229-v1:0
    Description: Bedrock model ID

Resources:
  SmartLabelApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/
      Handler: src/index.handler
      Runtime: nodejs18.x
      Timeout: 30
      Environment:
        Variables:
          BEDROCK_REGION: !Ref BedrockRegion
          BEDROCK_MODEL_ID: !Ref BedrockModelId
          DYNAMODB_TABLE_NAME: SmartLabel-Labels-dev
          DYNAMODB_CRISIS_TABLE_NAME: SmartLabel-CrisisLogs-dev
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - bedrock:InvokeModel
                - bedrock:InvokeModelWithResponseStream
              Resource: '*'
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
                - dynamodb:Query
                - dynamodb:Scan
              Resource: 
                - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/SmartLabel-Labels-dev"
                - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/SmartLabel-Labels-dev/index/*"
                - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/SmartLabel-CrisisLogs-dev"
                - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/SmartLabel-CrisisLogs-dev/index/*"
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
        RootApi:
          Type: Api
          Properties:
            Path: /
            Method: ANY

  # CORS Configuration
  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: SmartLabelApi
      Description: SmartLabel AI API Gateway
      EndpointConfiguration:
        Types:
          - REGIONAL

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
    Export:
      Name: !Sub "${AWS::StackName}-ApiUrl"
  
  SmartLabelApiFunction:
    Description: "SmartLabel API Lambda Function ARN"
    Value: !GetAtt SmartLabelApiFunction.Arn
    Export:
      Name: !Sub "${AWS::StackName}-SmartLabelApiFunction"